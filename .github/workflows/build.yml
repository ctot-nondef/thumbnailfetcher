name: test & build
on:
  push:
    branches: [master, dev]
  workflow_dispatch: ~

jobs:
  test:
    name: 'Node.js v${{ matrix.node }}'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        node-version: [22.x]
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Necessary because `actions/setup-node` does not yet support `corepack`.
      # @see https://github.com/actions/setup-node/issues/531
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run All Node.js Tests
        run: pnpm run test
      - name: Create Badge
        run: pnpm run coverage:badge
  dockerhub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: get branch
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
          TAG=${GITHUB_REF##*/}
          if [ "$TAG" == "master" ] ; then TAG=latest ; fi
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: docker build
        run: docker build -t nondef/thumbnailfetcher:$TAG --label "buildUrl=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" .
      - uses: docker/login-action@v1
        with:
          username: nondef
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker push
        run: docker push nondef/thumbnailfetcher:$TAG